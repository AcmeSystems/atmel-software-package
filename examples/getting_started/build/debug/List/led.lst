###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        21/May/2015  13:39:02
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        C:\Users\dfronek\Documents\Project\softpack\drivers\io\led.c
#    Command line =  
#        C:\Users\dfronek\Documents\Project\softpack\drivers\io\led.c -D
#        BOARD_SAMA5D2_XPLAINED -D API_PIOv4 -D SERIE_SAMA5D2 -D CHIP_SAMA5D27
#        -D sram --preprocess=l
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started\build\debug\List\
#        -lC
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started\build\debug\List\
#        -o
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started\build\debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-A5 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../drivers\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../examples\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../lib\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../target\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../target/include\
#        -I
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started/../../target/sama5d2\
#        --section .text=SOFTPACK --cpu_mode arm -On
#    List file    =  
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started\build\debug\List\led.lst
#    Object file  =  
#        C:\Users\dfronek\Documents\Project\softpack\examples\getting_started\build\debug\Obj\led.o
#
###############################################################################

C:\Users\dfronek\Documents\Project\softpack\drivers\io\led.c
      1          /* ----------------------------------------------------------------------------
                                                                                               ^
Warning[Pa050]: non-native end of line sequence detected (this diagnostic is
          only issued once)
      2           *         SAM Software Package License
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2015, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31           * \file
     32           */
     33          
     34          /*------------------------------------------------------------------------------
     35           *         Headers
     36           *------------------------------------------------------------------------------*/
     37          
     38          #include "board.h"

   \                                 In section .rodata, align 4
   \   __absolute unsigned int const _id_h64_matrix[14]
   \                     _id_h64_matrix:
   \   00000000   0x00000006         DC32 6, 7, 9, 10, 12, 13, 15, 31, 32, 45, 46, 52, 53, 63
   \              0x00000007   
   \              0x00000009   
   \              0x0000000A   
   \              0x0000000C   
   \              0x0000000D   
   \              0x0000000F   
   \              0x0000001F   
   \              0x00000020   
   \              0x0000002D   
   \              0x0000002E   
   \              0x00000034   
   \              0x00000035   
   \              0x0000003F   
     39          #include "io/led.h"
     40          #include "core/pio.h"
     41          
     42          /*------------------------------------------------------------------------------
     43           *         Local Variables
     44           *------------------------------------------------------------------------------*/
     45          
     46          #ifdef PINS_LEDS

   \                                 In section .rodata, align 4
     47          static const struct _pin pinsLeds[] = PINS_LEDS;
   \                     pinsLeds:
   \   00000000   0x00002000         DC32 8192, 0FC038000H
   \              0xFC038000   
   \   00000008   0x00 0x0B          DC8 0, 11, 4, 0
   \              0x04 0x00    
   \   0000000C   0x00000020         DC32 32, 0FC038000H
   \              0xFC038000   
   \   00000014   0x01 0x0C          DC8 1, 12, 4, 0
   \              0x04 0x00    
   \   00000018   0x00000001         DC32 1, 0FC038000H
   \              0xFC038000   
   \   00000020   0x01 0x0C          DC8 1, 12, 4, 0
   \              0x04 0x00    
     48          

   \                                 In section .rodata, align 4
     49          static const uint32_t numLeds = PIO_LISTSIZE(pinsLeds);
   \                     numLeds:
   \   00000000   0x00000003         DC32 3
     50          #endif
     51          
     52          /*------------------------------------------------------------------------------
     53           *         Global Functions
     54           *------------------------------------------------------------------------------*/
     55          
     56          /**
     57           *  Configures the pin associated with the given LED number. If the LED does
     58           *  not exist on the board, the function does nothing.
     59           *  \param dwLed  Number of the LED to configure.
     60           *  \return 1 if the LED exists and has been configured; otherwise 0.
     61           */

   \                                 In section SOFTPACK, align 4, keep-with-next
     62          extern uint32_t led_configure (uint32_t led)
     63          {
   \                     led_configure:
   \   00000000   0xE92D4010         PUSH     {R4,LR}
   \   00000004   0xE1B04000         MOVS     R4,R0
     64          #ifdef PINS_LEDS
     65          	// Check that LED exists
     66          	if (led >= numLeds) {
   \   00000008   0x........         LDR      R0,??DataTable3
   \   0000000C   0xE5900000         LDR      R0,[R0, #+0]
   \   00000010   0xE1540000         CMP      R4,R0
   \   00000014   0x3A000001         BCC      ??led_configure_0
     67          		return 0;
   \   00000018   0xE3A00000         MOV      R0,#+0
   \   0000001C   0xEA000004         B        ??led_configure_1
     68          	}
     69          	// Configure LED
     70          	return pio_configure(&pinsLeds[led], 1);
   \                     ??led_configure_0:
   \   00000020   0xE3A01001         MOV      R1,#+1
   \   00000024   0x........         LDR      R0,??DataTable3_1
   \   00000028   0xE0842084         ADD      R2,R4,R4, LSL #+1
   \   0000002C   0xE0900102         ADDS     R0,R0,R2, LSL #+2
   \   00000030   0x........         BL       pio_configure
   \                     ??led_configure_1:
   \   00000034   0xE8BD8010         POP      {R4,PC}          ;; return
     71          #else
     72          	return 0;
     73          #endif
     74          }
     75          
     76          /**
     77           *  Turns the given LED on if it exists; otherwise does nothing.
     78           *  \param dwLed  Number of the LED to turn on.
     79           *  \return 1 if the LED has been turned on; 0 otherwise.
     80           */

   \                                 In section SOFTPACK, align 4, keep-with-next
     81          extern uint32_t led_set(uint32_t led)
     82          {
   \                     led_set:
   \   00000000   0xE92D4010         PUSH     {R4,LR}
   \   00000004   0xE1B04000         MOVS     R4,R0
     83          #ifdef PINS_LEDS
     84          	/* Check if LED exists */
     85          	if (led >= numLeds) {
   \   00000008   0x........         LDR      R0,??DataTable3
   \   0000000C   0xE5900000         LDR      R0,[R0, #+0]
   \   00000010   0xE1540000         CMP      R4,R0
   \   00000014   0x3A000001         BCC      ??led_set_0
     86          		return 0;
   \   00000018   0xE3A00000         MOV      R0,#+0
   \   0000001C   0xEA00000F         B        ??led_set_1
     87          	}
     88          
     89          	/* Turn LED on */
     90          	if (pinsLeds[led].type == PIO_OUTPUT_0) {
   \                     ??led_set_0:
   \   00000020   0x........         LDR      R0,??DataTable3_1
   \   00000024   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000028   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   0000002C   0xE5D00009         LDRB     R0,[R0, #+9]
   \   00000030   0xE350000B         CMP      R0,#+11
   \   00000034   0x1A000004         BNE      ??led_set_2
     91          		pio_set(&pinsLeds[led]);
   \   00000038   0x........         LDR      R0,??DataTable3_1
   \   0000003C   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000040   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000044   0x........         BL       pio_set
   \   00000048   0xEA000003         B        ??led_set_3
     92          	} else {
     93          		pio_clear(&pinsLeds[led]);
   \                     ??led_set_2:
   \   0000004C   0x........         LDR      R0,??DataTable3_1
   \   00000050   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000054   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000058   0x........         BL       pio_clear
     94          	}
     95          	return 1;
   \                     ??led_set_3:
   \   0000005C   0xE3A00001         MOV      R0,#+1
   \                     ??led_set_1:
   \   00000060   0xE8BD8010         POP      {R4,PC}          ;; return
     96          #else
     97          	return 0;
     98          #endif
     99          }
    100          
    101          /**
    102           *  Turns a LED off.
    103           *
    104           *  \param dwLed  Number of the LED to turn off.
    105           *  \return 1 if the LED has been turned off; 0 otherwise.
    106           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    107          extern uint32_t led_clear (uint32_t led)
    108          {
   \                     led_clear:
   \   00000000   0xE92D4010         PUSH     {R4,LR}
   \   00000004   0xE1B04000         MOVS     R4,R0
    109          #ifdef PINS_LEDS
    110          	/* Check if LED exists */
    111          	if (led >= numLeds) {
   \   00000008   0x........         LDR      R0,??DataTable3
   \   0000000C   0xE5900000         LDR      R0,[R0, #+0]
   \   00000010   0xE1540000         CMP      R4,R0
   \   00000014   0x3A000001         BCC      ??led_clear_0
    112          		return 0;
   \   00000018   0xE3A00000         MOV      R0,#+0
   \   0000001C   0xEA00000F         B        ??led_clear_1
    113          	}
    114          	/* Turn LED off */
    115          	if (pinsLeds[led].type == PIO_OUTPUT_0) {
   \                     ??led_clear_0:
   \   00000020   0x........         LDR      R0,??DataTable3_1
   \   00000024   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000028   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   0000002C   0xE5D00009         LDRB     R0,[R0, #+9]
   \   00000030   0xE350000B         CMP      R0,#+11
   \   00000034   0x1A000004         BNE      ??led_clear_2
    116          		pio_clear(&pinsLeds[led]);
   \   00000038   0x........         LDR      R0,??DataTable3_1
   \   0000003C   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000040   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000044   0x........         BL       pio_clear
   \   00000048   0xEA000003         B        ??led_clear_3
    117          	} else {
    118          		pio_set(&pinsLeds[led]);
   \                     ??led_clear_2:
   \   0000004C   0x........         LDR      R0,??DataTable3_1
   \   00000050   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000054   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000058   0x........         BL       pio_set
    119          	}
    120          	return 1;
   \                     ??led_clear_3:
   \   0000005C   0xE3A00001         MOV      R0,#+1
   \                     ??led_clear_1:
   \   00000060   0xE8BD8010         POP      {R4,PC}          ;; return
    121          #else
    122          	return 0;
    123          #endif
    124          }
    125          
    126          /**
    127           *  Toggles the current state of a LED.
    128           *
    129           *  \param dwLed  Number of the LED to toggle.
    130           *  \return 1 if the LED has been toggled; otherwise 0.
    131           */

   \                                 In section SOFTPACK, align 4, keep-with-next
    132          extern uint32_t led_toggle(uint32_t led)
    133          {
   \                     led_toggle:
   \   00000000   0xE92D4010         PUSH     {R4,LR}
   \   00000004   0xE1B04000         MOVS     R4,R0
    134          #ifdef PINS_LEDS
    135          	/* Check if LED exists */
    136          	if (led >= numLeds) {
   \   00000008   0x........         LDR      R0,??DataTable3
   \   0000000C   0xE5900000         LDR      R0,[R0, #+0]
   \   00000010   0xE1540000         CMP      R4,R0
   \   00000014   0x3A000001         BCC      ??led_toggle_0
    137          		return 0;
   \   00000018   0xE3A00000         MOV      R0,#+0
   \   0000001C   0xEA00000F         B        ??led_toggle_1
    138          	}
    139          	/* Toggle LED */
    140          	if (pio_get_output_data_status(&pinsLeds[led])) {
   \                     ??led_toggle_0:
   \   00000020   0x........         LDR      R0,??DataTable3_1
   \   00000024   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000028   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   0000002C   0x........         BL       pio_get_output_data_status
   \   00000030   0xE3500000         CMP      R0,#+0
   \   00000034   0x0A000004         BEQ      ??led_toggle_2
    141          		pio_clear(&pinsLeds[led]);
   \   00000038   0x........         LDR      R0,??DataTable3_1
   \   0000003C   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000040   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000044   0x........         BL       pio_clear
   \   00000048   0xEA000003         B        ??led_toggle_3
    142          	} else {
    143          		pio_set(&pinsLeds[led]);
   \                     ??led_toggle_2:
   \   0000004C   0x........         LDR      R0,??DataTable3_1
   \   00000050   0xE0841084         ADD      R1,R4,R4, LSL #+1
   \   00000054   0xE0900101         ADDS     R0,R0,R1, LSL #+2
   \   00000058   0x........         BL       pio_set
    144          	}
    145          	return 1;
   \                     ??led_toggle_3:
   \   0000005C   0xE3A00001         MOV      R0,#+1
   \                     ??led_toggle_1:
   \   00000060   0xE8BD8010         POP      {R4,PC}          ;; return
    146          #else
    147          	return 0;
    148          #endif
    149          }

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     numLeds

   \                                 In section SOFTPACK, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     pinsLeds

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   led_clear
         8   -> pio_clear
         8   -> pio_set
       8   led_configure
         8   -> pio_configure
       8   led_set
         8   -> pio_clear
         8   -> pio_set
       8   led_toggle
         8   -> pio_clear
         8   -> pio_get_output_data_status
         8   -> pio_set


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
      56  _id_h64_matrix
     100  led_clear
      56  led_configure
     100  led_set
     100  led_toggle
       4  numLeds
      36  pinsLeds

 
  96 bytes in section .rodata
 364 bytes in section SOFTPACK
 
 364 bytes of CODE  memory
  96 bytes of CONST memory

Errors: none
Warnings: 1
